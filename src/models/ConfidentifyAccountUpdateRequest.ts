/* tslint:disable */
/* eslint-disable */
/**
 * Confidentify API
 * Services that let you build confidence and identify matches in customer data. ## Features overview * Contact data processing services (tagged with `process`) which offer   validation and enrichment backed by inference and knowledge on complex   data types such as names, email addresses, phone numbers.  * Data matching and searching services (tagged with `matching`) that    allow you to identify duplicated data or matches against third party   contact data list.  * Dataset management services (tagged with `dataset`) that allow record storage and retrieval. ## Integrator notes: * Use the `/auth` endpoint to get an access token. Access tokens are temporary, so design the client the be capable of renewing it. * The APIs are rate-limited, so design the client to be capable of retrying with some delay upon HTTP 429 responses. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConfidentifyAccountUpdateRequest
 */
export interface ConfidentifyAccountUpdateRequest {
    /**
     * The name of the account, typically a company name. 
     * @type {string}
     * @memberof ConfidentifyAccountUpdateRequest
     */
    name?: string;
    /**
     * Optional URL to an image representing the account.
     * @type {string}
     * @memberof ConfidentifyAccountUpdateRequest
     */
    imageUrl?: string;
    /**
     * Optional URL to the account\'s website.
     * @type {string}
     * @memberof ConfidentifyAccountUpdateRequest
     */
    websiteUrl?: string;
}

export function ConfidentifyAccountUpdateRequestFromJSON(json: any): ConfidentifyAccountUpdateRequest {
    return ConfidentifyAccountUpdateRequestFromJSONTyped(json, false);
}

export function ConfidentifyAccountUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfidentifyAccountUpdateRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'imageUrl': !exists(json, 'image_url') ? undefined : json['image_url'],
        'websiteUrl': !exists(json, 'website_url') ? undefined : json['website_url'],
    };
}

export function ConfidentifyAccountUpdateRequestToJSON(value?: ConfidentifyAccountUpdateRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'image_url': value.imageUrl,
        'website_url': value.websiteUrl,
    };
}


