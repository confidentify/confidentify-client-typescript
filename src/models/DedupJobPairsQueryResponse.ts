/* tslint:disable */
/* eslint-disable */
/**
 * Confidentify API
 * Services that let you build confidence and identify matches in customer data. ## Features overview * Contact data processing services (tagged with `process`) which offer   validation and enrichment backed by inference and knowledge on complex   data types such as names, email addresses, phone numbers.  * Data matching and searching services (tagged with `matching`) that    allow you to identify duplicated data or matches against third party   contact data list.  * Dataset management services (tagged with `dataset`) that allow record storage and retrieval. ## Integrator notes: * Use the `/auth` endpoint to get an access token. Access tokens are temporary, so design the client the be capable of renewing it. * The APIs are rate-limited, so design the client to be capable of retrying with some delay upon HTTP 429 responses. 
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MatchedPair,
    MatchedPairFromJSON,
    MatchedPairFromJSONTyped,
    MatchedPairToJSON,
    NextPageInformation,
    NextPageInformationFromJSON,
    NextPageInformationFromJSONTyped,
    NextPageInformationToJSON,
} from './';

/**
 * 
 * @export
 * @interface DedupJobPairsQueryResponse
 */
export interface DedupJobPairsQueryResponse {
    /**
     * The record pairs retrieved from the query. 
     * @type {Array<MatchedPair>}
     * @memberof DedupJobPairsQueryResponse
     */
    pairs?: Array<MatchedPair>;
    /**
     * 
     * @type {NextPageInformation}
     * @memberof DedupJobPairsQueryResponse
     */
    nextPage?: NextPageInformation;
}

export function DedupJobPairsQueryResponseFromJSON(json: any): DedupJobPairsQueryResponse {
    return DedupJobPairsQueryResponseFromJSONTyped(json, false);
}

export function DedupJobPairsQueryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DedupJobPairsQueryResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pairs': !exists(json, 'pairs') ? undefined : ((json['pairs'] as Array<any>).map(MatchedPairFromJSON)),
        'nextPage': !exists(json, 'next_page') ? undefined : NextPageInformationFromJSON(json['next_page']),
    };
}

export function DedupJobPairsQueryResponseToJSON(value?: DedupJobPairsQueryResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pairs': value.pairs === undefined ? undefined : ((value.pairs as Array<any>).map(MatchedPairToJSON)),
        'next_page': NextPageInformationToJSON(value.nextPage),
    };
}


