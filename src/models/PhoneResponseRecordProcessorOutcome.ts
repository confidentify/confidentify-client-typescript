/* tslint:disable */
/* eslint-disable */
/**
 * Confidentify API
 * Services that let you build confidence and identify matches in customer data. ## Features overview * Contact data processing services (tagged with `process`) which offer   validation and enrichment backed by inference and knowledge on complex   data types such as names, email addresses, phone numbers.  * Data matching and searching services (tagged with `matching`) that    allow you to identify duplicated data or matches against third party   contact data list.  * Dataset management services (tagged with `dataset`) that allow record storage and retrieval. ## Integrator notes: * Use the `/auth` endpoint to get an access token. Access tokens are temporary, so design the client the be capable of renewing it. * The APIs are rate-limited, so design the client to be capable of retrying with some delay upon HTTP 429 responses. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PhoneResponseRecordProcessorOutcomeAllOf,
    PhoneResponseRecordProcessorOutcomeAllOfFromJSON,
    PhoneResponseRecordProcessorOutcomeAllOfFromJSONTyped,
    PhoneResponseRecordProcessorOutcomeAllOfToJSON,
    ProcessorOutcome,
    ProcessorOutcomeFromJSON,
    ProcessorOutcomeFromJSONTyped,
    ProcessorOutcomeToJSON,
    ProcessorVerdict,
    ProcessorVerdictFromJSON,
    ProcessorVerdictFromJSONTyped,
    ProcessorVerdictToJSON,
} from './';

/**
 * 
 * @export
 * @interface PhoneResponseRecordProcessorOutcome
 */
export interface PhoneResponseRecordProcessorOutcome {
    /**
     * 
     * @type {ProcessorVerdict}
     * @memberof PhoneResponseRecordProcessorOutcome
     */
    verdict?: ProcessorVerdict;
    /**
     * A list of informational entries about the processed entity.
     * @type {Array<string>}
     * @memberof PhoneResponseRecordProcessorOutcome
     */
    info?: Array<string>;
    /**
     * A list of warnings about the processed entity.
     * @type {Array<string>}
     * @memberof PhoneResponseRecordProcessorOutcome
     */
    warn?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof PhoneResponseRecordProcessorOutcome
     */
    isParsed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PhoneResponseRecordProcessorOutcome
     */
    isPossible?: boolean;
}

export function PhoneResponseRecordProcessorOutcomeFromJSON(json: any): PhoneResponseRecordProcessorOutcome {
    return PhoneResponseRecordProcessorOutcomeFromJSONTyped(json, false);
}

export function PhoneResponseRecordProcessorOutcomeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PhoneResponseRecordProcessorOutcome {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'verdict': !exists(json, 'verdict') ? undefined : ProcessorVerdictFromJSON(json['verdict']),
        'info': !exists(json, 'info') ? undefined : json['info'],
        'warn': !exists(json, 'warn') ? undefined : json['warn'],
        'isParsed': !exists(json, 'is_parsed') ? undefined : json['is_parsed'],
        'isPossible': !exists(json, 'is_possible') ? undefined : json['is_possible'],
    };
}

export function PhoneResponseRecordProcessorOutcomeToJSON(value?: PhoneResponseRecordProcessorOutcome | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'verdict': ProcessorVerdictToJSON(value.verdict),
        'info': value.info,
        'warn': value.warn,
        'is_parsed': value.isParsed,
        'is_possible': value.isPossible,
    };
}


