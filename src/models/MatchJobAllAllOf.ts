/* tslint:disable */
/* eslint-disable */
/**
 * Confidentify API
 * Services that let you build confidence and identify matches in customer data. ## Features overview * Contact data processing services (tagged with `process`) which offer   validation and enrichment backed by inference and knowledge on complex   data types such as names, email addresses, phone numbers.  * Data matching and searching services (tagged with `matching`) that    allow you to identify duplicated data or matches against third party   contact data list.  * Dataset management services (tagged with `dataset`) that allow record storage and retrieval. ## Integrator notes: * Use the `/auth` endpoint to get an access token. Access tokens are temporary, so design the client the be capable of renewing it. * The APIs are rate-limited, so design the client to be capable of retrying with some delay upon HTTP 429 responses. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MatchJobProgress,
    MatchJobProgressFromJSON,
    MatchJobProgressFromJSONTyped,
    MatchJobProgressToJSON,
} from './';

/**
 * 
 * @export
 * @interface MatchJobAllAllOf
 */
export interface MatchJobAllAllOf {
    /**
     * The username of the user who created the job
     * @type {string}
     * @memberof MatchJobAllAllOf
     */
    createdBy?: string;
    /**
     * The date and time of job starting.
     * @type {Date}
     * @memberof MatchJobAllAllOf
     */
    startedAt?: Date;
    /**
     * The date and time of job finishing.
     * @type {Date}
     * @memberof MatchJobAllAllOf
     */
    finishedAt?: Date;
    /**
     * A description of the latest known job state.
     * @type {string}
     * @memberof MatchJobAllAllOf
     */
    phase?: string;
    /**
     * 
     * @type {MatchJobProgress}
     * @memberof MatchJobAllAllOf
     */
    progress?: MatchJobProgress;
}

export function MatchJobAllAllOfFromJSON(json: any): MatchJobAllAllOf {
    return MatchJobAllAllOfFromJSONTyped(json, false);
}

export function MatchJobAllAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): MatchJobAllAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdBy': !exists(json, 'created_by') ? undefined : json['created_by'],
        'startedAt': !exists(json, 'started_at') ? undefined : (new Date(json['started_at'])),
        'finishedAt': !exists(json, 'finished_at') ? undefined : (new Date(json['finished_at'])),
        'phase': !exists(json, 'phase') ? undefined : json['phase'],
        'progress': !exists(json, 'progress') ? undefined : MatchJobProgressFromJSON(json['progress']),
    };
}

export function MatchJobAllAllOfToJSON(value?: MatchJobAllAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created_by': value.createdBy,
        'started_at': value.startedAt === undefined ? undefined : (value.startedAt.toISOString()),
        'finished_at': value.finishedAt === undefined ? undefined : (value.finishedAt.toISOString()),
        'phase': value.phase,
        'progress': MatchJobProgressToJSON(value.progress),
    };
}


