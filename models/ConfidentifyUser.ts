/* tslint:disable */
/* eslint-disable */
/**
 * Confidentify API
 * Services that let you build confidence and identify matches in customer data. ## Features overview * Contact data processing services (tagged with `process`) which offer   validation and enrichment backed by inference and knowledge on complex   data types such as names, email addresses, phone numbers.  * Data matching and searching services (tagged with `matching`) that    allow you to identify duplicated data or matches against third party   contact data list.  * Dataset management services (tagged with `dataset`) that allow record storage and retrieval. ## Integrator notes: * Use the `/auth` endpoint to get an access token. Access tokens are temporary, so design the client the be capable of renewing it. * The APIs are rate-limited, so design the client to be capable of retrying with some delay upon HTTP 429 responses. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConfidentifyUser
 */
export interface ConfidentifyUser {
    /**
     * 
     * @type {string}
     * @memberof ConfidentifyUser
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof ConfidentifyUser
     */
    accountId?: string;
    /**
     * A running approximate count of how many times the user has logged in.
     * @type {number}
     * @memberof ConfidentifyUser
     */
    loginCount?: number;
    /**
     * The time of the user\'s last login
     * @type {Date}
     * @memberof ConfidentifyUser
     */
    loginAt?: Date;
}

export function ConfidentifyUserFromJSON(json: any): ConfidentifyUser {
    return ConfidentifyUserFromJSONTyped(json, false);
}

export function ConfidentifyUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfidentifyUser {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'username': !exists(json, 'username') ? undefined : json['username'],
        'accountId': !exists(json, 'account_id') ? undefined : json['account_id'],
        'loginCount': !exists(json, 'login_count') ? undefined : json['login_count'],
        'loginAt': !exists(json, 'login_at') ? undefined : (new Date(json['login_at'])),
    };
}

export function ConfidentifyUserToJSON(value?: ConfidentifyUser | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'username': value.username,
        'account_id': value.accountId,
        'login_count': value.loginCount,
        'login_at': value.loginAt === undefined ? undefined : (value.loginAt.toISOString()),
    };
}


