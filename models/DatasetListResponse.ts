/* tslint:disable */
/* eslint-disable */
/**
 * Confidentify API
 * Services that let you build confidence and identify matches in customer data. ## Features overview * Contact data processing services (tagged with `process`) which offer   validation and enrichment backed by inference and knowledge on complex   data types such as names, email addresses, phone numbers.  * Data matching and searching services (tagged with `matching`) that    allow you to identify duplicated data or matches against third party   contact data list.  * Dataset management services (tagged with `dataset`) that allow record storage and retrieval. ## Integrator notes: * Use the `/auth` endpoint to get an access token. Access tokens are temporary, so design the client the be capable of renewing it. * The APIs are rate-limited, so design the client to be capable of retrying with some delay upon HTTP 429 responses. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DatasetListItem,
    DatasetListItemFromJSON,
    DatasetListItemFromJSONTyped,
    DatasetListItemToJSON,
} from './';

/**
 * 
 * @export
 * @interface DatasetListResponse
 */
export interface DatasetListResponse {
    /**
     * A list of datasets owned by the account 
     * @type {Array<DatasetListItem>}
     * @memberof DatasetListResponse
     */
    datasetsAccount?: Array<DatasetListItem>;
    /**
     * A list  of datasets shared with the account. Shared datasets are only available for read/matching-operations, not for updates. 
     * @type {Array<DatasetListItem>}
     * @memberof DatasetListResponse
     */
    datasetsShared?: Array<DatasetListItem>;
}

export function DatasetListResponseFromJSON(json: any): DatasetListResponse {
    return DatasetListResponseFromJSONTyped(json, false);
}

export function DatasetListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DatasetListResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'datasetsAccount': !exists(json, 'datasets_account') ? undefined : ((json['datasets_account'] as Array<any>).map(DatasetListItemFromJSON)),
        'datasetsShared': !exists(json, 'datasets_shared') ? undefined : ((json['datasets_shared'] as Array<any>).map(DatasetListItemFromJSON)),
    };
}

export function DatasetListResponseToJSON(value?: DatasetListResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'datasets_account': value.datasetsAccount === undefined ? undefined : ((value.datasetsAccount as Array<any>).map(DatasetListItemToJSON)),
        'datasets_shared': value.datasetsShared === undefined ? undefined : ((value.datasetsShared as Array<any>).map(DatasetListItemToJSON)),
    };
}


